>>>>>>>>>> 2021-09-03 // PM 09:00
1. SignManager 에서 recv 된 이후 callback 함수들을 result 결과에 따라 unpack 하는 process
2. 위 과정에서 생기는 string 출력 및 window를 game 에 띄우기

3. net send recv 테스트 

-> 성공 시 SERVER 가 대응되도록 코드 작성


>>>>>>>>>> 2021-09-04 // PM 06:04
1. unity scrollrect 관련 버그 수정
2. unity 에서 main thread 와  network thread 통신시 
    constants(전역 static queue) 를 통해 데이터를 주고 받도록 수정
3. sever 접속까지 완료 (Accept 까지는 잘 됨)

TODO : 
    1. 서버에서 state pattern 쪽 / session 으로 signal(protocol) 을 념겨줄(return value) 수 있도록 수정
    2. 서버에서 state pattern 관련 class들을 처음 Initialize 시 모두 alloc 하고 대기시키도록
        이후 관리 자료구조에 저장하기
    3. 서버에서 sign state 가 client 에 대응되도록 수정

    4. mysql 연동
        1) 첫 서버 구동 시 sql을 통해서 db를 모두 불러오고
        2) 해당 정보를 file 저장
        3) client 와 통신 시 수정되는 사항들은 memory에 저장
        4) 일정 주기마다 memory에 저장된 sign 관련 info들을 file 에 저장
        5) 서버 닫을 때 모든 sign info data를 file 에 저장하고, db에 저장

    5. c++ file 입출력 관련(위에서 사용해야 되니...)

>>>>>>>>>> 2021-09-05 // PM 6:21
TODO : State 내부에서 OnRecvComplete 시 Result 를 저장해 두고 Send 작업이 완료 됬을 때 change state

>>>>>>>>>> 2021-09-09 // PM 7:00
코드 정리 완료
    1) 상속 구조 개선 / 네트워크 모델이 많은게 아니라 굳이 상속 구조를 유지할 필요가 없다고 판단하여 정리함
    2) 각 레벨별로 폴더 구분 및 헤더 분리 / 컴파일 속도 소폭 증가함 -> 같은 레벨에서는 분리하지 못함 (이유 모르겠음)
    3) c++ wchar_t 에 대응되도록 모두 수정 완료
    4) 32bit -> 64bit 변환 완료
    5) c++ 14 -> c++ 17 이전
    5) sql 등록 완료
    6) string utility 추가
    7) file utility 추가 (c++ 17 : filesystem)
    8) namespace 정리
    9) SignManager 관리 자료구조 list -> hash map 으로 변경

>>>>>>>>>> 2021-09-10


>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 